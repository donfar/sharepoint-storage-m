name: Deploy SharePoint Storage Monitor

on:
  push:
    branches: [ main ]
    paths:
      - 'src/sharepoint-storage-monitor/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod

env:
  AZURE_FUNCTIONAPP_NAME: sharepoint-storage-monitor-${{ github.event.inputs.environment || 'dev' }}
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/sharepoint-storage-monitor'

jobs:
  build-and-deploy:
    runs-on: windows-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup PowerShell Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Install Azure Az PowerShell module
      shell: pwsh
      run: |
        Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force
        Install-Module -Name PnP.PowerShell -Scope CurrentUser -Repository PSGallery -Force
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Package Function App
      shell: pwsh
      run: |
        Compress-Archive -Path "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/*" -DestinationPath function.zip -Force
    
    - name: Deploy Infrastructure
      shell: pwsh
      run: |
        $SecureWorkspaceKey = ConvertTo-SecureString ${{ secrets.WORKSPACE_KEY }} -AsPlainText -Force
        
        $params = @{
          ResourceGroupName = "${{ secrets.RESOURCE_GROUP }}"
          Location = "${{ secrets.LOCATION }}"
          FunctionAppName = "${{ env.AZURE_FUNCTIONAPP_NAME }}"
          KeyVaultName = "${{ secrets.KEY_VAULT_NAME }}"
          WorkspaceId = "${{ secrets.WORKSPACE_ID }}"
          WorkspaceKey = "${{ secrets.WORKSPACE_KEY }}"
          LogName = "SharePointStorageStats"
        }
        
        ./src/sharepoint-storage-monitor/deploy.ps1 @params
      
    - name: Deploy Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: function.zip
    
    - name: Configure Tenants
      shell: pwsh
      run: |
        # Load tenant configuration from GitHub secrets
        $tenantConfig = ${{ secrets.TENANT_CONFIG }} | ConvertFrom-Json
        
        # Get KeyVault
        $keyVault = Get-AzKeyVault -VaultName "${{ secrets.KEY_VAULT_NAME }}"
        
        foreach ($tenant in $tenantConfig) {
          $secretName = $tenant.SecretName
          $secretValue = ConvertTo-SecureString $tenant.SecretValue -AsPlainText -Force
          
          # Store the secret in KeyVault
          Set-AzKeyVaultSecret -VaultName $keyVault.VaultName -Name $secretName -SecretValue $secretValue
        }
        
        # Update function app with tenant list (but without secrets)
        $tenantConfigForApp = $tenantConfig | Select-Object -Property TenantId, TenantName, ClientId, SecretName, SharePointSites
        $tenantConfigJson = $tenantConfigForApp | ConvertTo-Json -Depth 10 -Compress
        
        $functionAppSettings = @{
          "TenantsList" = $tenantConfigJson
        }
        
        Update-AzFunctionAppSetting -ResourceGroupName "${{ secrets.RESOURCE_GROUP }}" -Name "${{ env.AZURE_FUNCTIONAPP_NAME }}" -AppSetting $functionAppSettings